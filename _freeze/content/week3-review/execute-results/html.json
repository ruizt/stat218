{
  "hash": "ef65dd270ab89481e2067c87b9275afd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Review session 1\"\nsubtitle: \"Weeks 1-3 [L1, L2, L3]: study design, data semantics, and descriptive statistics\"\nformat: \n  revealjs:\n    logo: img/poly-logo-2.jpg\n    footer: \"STAT218\"\n    smaller: true\n    mermaid:\n      theme: neutral\nexecute: \n  echo: false\n  warning: false\n  message: false\n---\n\n::: {.cell}\n\n:::\n\n\n## Outcomes\n\n-   \\[L1\\] design a data collection scheme based on simple random sampling or simple experimental designs\n\n-   \\[L2\\] distinguish between observational studies and experiments and understand the limitations (practical and consequential) of each\n\n-   \\[L3\\] summarize data using graphical and numerical techniques\n\n## Lecture/lab recap\n\nWeek/day | Lecture | Lab\n---|---|---\n1/W | Experiments and observational studies | Reading abstracts\n2/M | Data vocabulary, proportions and means, common notation | Loading data, extracting variables, computing means and proportions\n2/W | Measures of location/center and spread, simple graphics | Histograms, barplots, summary statistics\n3/M | Graphics and tables for two variables, interpreting relationships, correlation | Stacked bar plots, side-by-side boxplots, scatterplots\n\n: {tbl-colwidths=\"[20,80]\"}\n\n## Assignment recap\n\nProblem set | Topics\n---|---\nPS1 | Interpreting study descriptions\nPS2 | Summary statistics (mean, proportion) for one variable; identifying variable types\nPS3 | Measures of location and spread for one variable; visualizing frequency distributions\nPS4 | Visualizing relationships between two variables (C/C, C/N, N/N)\n\n: {tbl-colwidths=\"[20,80]\"}\n\n## Questions: [L1, L2] study design\n\n- Experiment or observational study?\n- Describe the population\n- Describe the sample\n- Identify the outcomes\n- Identify variable types\n\n## Questions: [L3] descriptive statistics\n\n- Compute/interpret mean/median/percentiles/IQR/variance/SD\n- Compute/interpret a grouped summary with one or more of the above measures\n- Determine appropriate measures of location/center/spread\n- Make/interpret a table of proportions for values of a categorical variable\n- Make/interpret a contingency table\n- Make/interpret a histogram\n- Make/interpret two-way tables of proportions\n- Make/interpret stacked bar plots representing proportions\n- Make/interpret side-by-side boxplots\n- Make/interpret scatterplots\n- Compute/interpret correlations\n\n## Commonly missed question types\n\nIdentifying appropriate measures of center/spread (*i.e.*, understanding robustness)\nGrouped summaries (getting syntax right)\nDetermining \n\n## Key concepts\n\n- [L1, L2] Experiments and observational studies\n- [L1, L2] Samples and populations\n- [L2] Variable types: categorical (nominal/ordinal) and numeric (discrete/continuous)\n- [L3] Summary statistics: mean, median, percentile, IQR, SD, variance, correlation\n- [L3] Distribution properties: skewness, outliers, modes\n- [L3] Robustness of common summary statistics\n- [L3] Relationships: positive/negative; linear/nonlinear\n\n## About the test\n\n- 4-5 questions\n- Expect one challenge part, but otherwise very similar to homework problems and practice questions\n- 48 hours, open book, open note\n- Posit cloud project + fillable form\n- Revisions will be allowed to earn back credit\n- No collaboration\n- Do your own analysis/writing (no AI plagiarism)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}