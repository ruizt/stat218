{
  "hash": "ec0f0c6b67dbeb10e13d0093e779e259",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 10 activity: line fitting\"\nauthor: \"STAT218\"\nauthor-title: \"Course activity\"\nexecute: \n  echo: true\n  eval: true\n  message: false\n  warning: false\nformat: html\nfig-width: 4\nfig-height: 4\n---\n\n::: {.cell}\n\n:::\n\n\n\nThis activity is a self-paced warmup in preparation for learning about linear regression. Simply put, linear regression consists of fitting a line to data in order to describe the relationship between two numeric variables. \n\nBy 'fitting' we do mean something a bit more specific than drawing any old line through a scatterplot, but it's worth emphasizing that the criteria we'll develop later in class, though formal, do reflect several common intuitions about what a 'well-fitting' line looks like. So, the goal of this activity is to explore some of those intuitions. \n\nThe over-arching question I'd like you to consider as you work through this activity is: ***what makes a line \"good\" as a representation of the relationship between two variables?***\n\nWe'll use two datasets:\n\n- `prevend`, which contains measurements of cognitive assessment score and age for 208 adults\n- `mammals`, which contains measurements of brain weight (g) and body weight (kg) for 62 mammal species\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nload('data/prevend.RData')\nload('data/mammals.RData')\nhand.fit <- readRDS('fns/handfit.rds')\nsim.by.cor <- readRDS('fns/simbycor.rds')\n```\n:::\n\n\n\n### Scatterplots\n\nTo start, let's review scatterplots. These are straightforward to construct using `plot(...)`; in addition to what you have seen before, the commands below show you an alternate syntax for making scatterplots using a formula specification of the form `y ~ x`, as well as how to adjust the labels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# variables of interest\nage <- prevend$age\nrfft <- prevend$rfft\n\n# scatterplot of RFFT score against age\nplot(age, rfft)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/constructing scatterplots-1.png){width=384}\n:::\n\n```{.r .cell-code}\n# alternate syntax: formula\nplot(rfft ~ age)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/constructing scatterplots-2.png){width=384}\n:::\n\n```{.r .cell-code}\n# change labels\nplot(rfft ~ age, xlab = 'age', ylab = 'RFFT score')\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/constructing scatterplots-3.png){width=384}\n:::\n:::\n\n\n> There is a negative linear relationship between RFFT score and age, suggesting cognitive function decreases with age.\n\nScatterplots allow for visual assessment of trend. A trend is *linear* if it seems to follow a straight line; linear trends are *positive* if they increase from left to right and *negative* if they decrease from left to right. Most of the time, you won't see a perfectly clear straight-line relationship, so what we really mean by this is that (a) there's a trend and (b) a line would describe it about as well as any other path drawn through the scatter.\n\n::: callout-note\n## Your turn 1\n\nUsing the `mammals` dataset, construct a scatterplot of `log.brain` (y) against `log.body` (x) using the formula syntax. Label the axes \"log body weight (kg)\" and \"log brain weight (g)\". Describe the trend you see in the data.\n\n\n\n\n:::\n\n::: {.callout-note icon=false collapse=true appearance=\"minimal\"}\n## Solution\n\nThere is a positive linear relationship between log brain weight and log body weight, suggesting that larger mammals in general have larger brains. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# variables of interest\nlog.brain <- mammals$log.brain\nlog.body <- mammals$log.body\n\n# scatterplot of log brain weight against log body weight \nplot(log.brain ~ log.body, \n     xlab = 'log body weight (kg)', \n     ylab = 'log brain weight (g)')\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/your turn 1 solution-1.png){width=384}\n:::\n:::\n\n:::\n\nIn most contexts one variable is of direct interest, and the other is considered as potentially explaining the variable of interest. For example:\n\n- in the `prevend` data, age might explain cognitive functioning\n- in the `mammals` data, body size might explain brain size\n\nPlots are typically oriented so that the variable of interest, or *response*, is on the vertical (y) axis and the *explanatory variable* is on the horizontal (x) axis. Throughout the rest of this activity, you'll see these terms and the notation $x, y$ used correspondingly.\n\n### Correlation\n\nBoth of the above examples show linear trends of differing strength. The `prevend` data are not as close to falling on a straight line as the `mammals` data, so there is a stronger linear relationship between log brain and log body weights than there is between RFFT score and age. \n\nFurther, the two examples show trends of differing direction: the trend in the `prevend` data is negative (RFFT declines with age) whereas the trend in the `mammals` data is positive (brain size increases with body size).\n\nThe direction and strength of a linear relationship can be measured directly by the correlation coefficient, defined as:\n\n$$\nr = \\frac{\\sum_{i = 1}^n(x_i - \\bar{x})(y_i - \\bar{y})}{s_x s_y}\n$$\nThe correlation coefficient is always between -1 and 1:\n\n- $r \\rightarrow 0$ indicates no relationship\n- $r \\rightarrow 1$ indicates a perfect linear relationship\n- $r > 0$ indicates a positive linear relationship\n- $r < 0$ indicates a negative linear relationship\n\nCorrelations are simple to compute in R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# correlation between age and rfft\ncor(age, rfft)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.635854\n```\n\n\n:::\n:::\n\n\nInterpretations should note the direction and strength. Strength is a little subjective, but as a rule of thumb:\n\n- $|r| < 0.3$: no relationship\n- $0.3 \\leq |r| < 0.6$: weak to moderate relationship\n- $0.6 \\leq |r| < 1$: moderate to strong relationship\n\nIn this case:\n\n> There is a moderate negative linear relationship between age and RFFT.\n\n::: callout-note\n## Your turn 2\n\nCompute the correlation between log brain weight and log body weight; interpret the correlation in context.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# correlation between log brain and log body\n```\n:::\n\n:::\n\n::: {.callout-note icon=false collapse=true appearance=\"minimal\"}\n## Solution\n\nThere is a strong positive linear relationship between log body weight and log brain weight.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# correlation between log brain and log body\ncor(log.brain, log.body)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9595748\n```\n\n\n:::\n:::\n\n:::\n\nGenerally, the stronger the correlation, the easier it will be to visualize a line passing through the data.\n\n::: callout-tip\n## Exploration: visualizing correlations\n\nThe `sim.by.cor` function simulates observations of two numeric variables that have a specified correlation `r`. It returns a plot of the simulated data showing the scatter, the $y = x$ line, and the sample correlation. The sample correlation will differ a little bit from the true value, so don't be surprised if the sample correlation doesn't exactly match the value of `r` that you input.\n\nUse this to explore the correspondence between the sample correlation and the visual appearance of scatterplots:\n\n- try several negative correlations\n- try several positive correlations\n- try both large (near $\\pm$ 1) and small (near 0) values\n\nFor each value of `r` you try, run the command a few times to see several simulated datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# adjust r to see what different correlations look like in simulated data\nsim.by.cor(r = 0, n = 500)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/visualize data with different correlations-1.png){width=384}\n:::\n:::\n\n:::\n\n\n### Hand-fitting lines\n\nNow we'll turn to actually drawing lines through data scatter to approximate linear relationships. We'll do this by specifying a slope and (sometimes) intercept, so a quick reminder of the slope-intercept form for the equation of a line may be handy:\n\n$$\ny = a + bx\n$$\n\n\n- the intercept $a$ is the value at which the line passes through the vertical axis (the value of $y$ when $x = 0$)\n- the slope $b$ is the amount by which $y$ increases for each increment in $x$ (sometimes called 'rise over run')\n\nI've written a function called `hand.fit` that allows you to construct a scatterplot and easily add a line by specifying the slope and intercept. \n\nFirst we'll consider \"eye-fitting\" a line by trying out different slopes and intercepts until a combination is found that looks good. For example, for the `prevend` dataset a slope of -1.3 and an intercept of 145 look reasonable:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# i adjusted a and b until the line reflected the trend well\nhand.fit(x = age, y = rfft, a = 145, b = -1.3)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/hand fitting a line to the prevend data-1.png){width=384}\n:::\n:::\n\n\nConsider what this line says about the relationship between RFFT and age:\n\n> With each year of age, RFFT score decreases by 1.3 points.\n\nThe intercept doesn't have a clear interpretation, because $x = 0$ is not meaningful for this dataset: technically, it says that RFFT for a 0-year-old would be 145, which of course is nonsensical.\n\n::: callout-note\n## Your turn 3\n\nFor the log brain weight and log body weight variables in the `mammals` dataset, experiment with the intercept `a` and the slope `b` until you find a pair of values that seem to reflect the trend well. Interpret the relationship described by the line.\n\nI suggest starting with `a = 0` and `b = 0`. Note that if the values are too extreme, the line may not appear at all on the plot.\n\n\n\n\n:::\n\n::: {.callout-note icon=false collapse=true appearance=\"minimal\"}\n## Solution\n\nThere are many possible lines that visually fit the data well. One possible solution:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# adjust a and b until the line reflects the trend well\nhand.fit(x = log.body, y = log.brain, a = 1.9, b = 0.85)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/your turn 3 solution-1.png){width=384}\n:::\n:::\n\n\nThis line says that each 1-unit increment in the log of a mammal's body weight is associated with a 0.85-unit increase in log brain weight. (There is a better interpretation, but it's a bit more mathematically complicated.)\n:::\n\nNow we'll develop some ideas that will help to assess how good these lines are as representations of the $x-y$ relationship.\n\n### Residuals\n\nA residual is something left over; in this context, the difference between the line and a data point. There is one residual for every data point. If we denote the value of the response variable on the line as:\n\n$$\n\\hat{y}_i = a + bx\n$$\n\nThen the residual for the $i$th observation is:\n\n$$\ne_i = y_i - \\hat{y}_i\n$$\n\nResiduals help to capture the fit of the model, because taken together, they convey how close the line is to each data point.\n\n#### Visualizing residuals\n\nAdding the argument `res = T` to the `hand.fit(...)` function will show the residuals visually as vertical red line segments. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add residuals to the plot\nhand.fit(x = age, y = rfft, a = 145, b = -1.3, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/visualize residuals-1.png){width=384}\n:::\n:::\n\n\nData points below the line have negative residuals, and data points above the line have positive residuals. \n\n::: callout-note \n## Your turn 4\n\nPlot the residuals for the line you identified in the last exercise.\n\n\n\n\n\n:::\n\n::: {.callout-note icon=false collapse=true appearance=\"minimal\"}\n## Solution\n\nFor the values I identified, the residuals look like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add residuals to your line from before\nhand.fit(x = log.body, y = log.brain, a = 1.9, b = 0.85, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/your turn 4 solution-1.png){width=384}\n:::\n:::\n\n::: \n\nTake a moment to consider what the residuals in your plot and the example above convey about line fit:\n\n- What would the residuals look like if fit is good? \n- What would they look like if fit is good?\n\n#### Bias\n\nIn this context, bias refers to how often the line overestimates and underestimates data values:\n\n- if the line tends to overestimate and underestimate equally often, it is unbiased\n- if the line tends to overestimate more often or underestimate more often, then it is biased\n\nThe average residual captures whether the line is biased:\n\n- positive average residual $\\longrightarrow$ underestimates more often $\\longrightarrow$ negative bias\n- negative average residual $\\longrightarrow$ overestimates more often $\\longrightarrow$ positive bias\n- average residual near zero $\\longrightarrow$ unbiased\n\nSo, define as a measure of bias the negative average residual:\n$$\n\\text{bias} = -\\frac{1}{n}\\sum_{i = 1}^n e_i\n$$\n\nIn the example above, the bias of 4.5 means that on average, the line overestimates RFFT score by 4.5 points. If we increase the intercept, we will overestimate even more often, and thus increase the bias:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# obvious positive bias\nhand.fit(x = age, y = rfft, a = 165, b = -1.3, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/more positive bias-1.png){width=384}\n:::\n:::\n\n\n::: callout-note\n## Your turn 5\n\nUsing the log brain and log body weights in the `mammals` dataset, see if you can fit lines with positive, negative, and no bias.\n\n1. Find a line that has obvious positive bias.\n2. Find a line that has obvious negative bias.\n3. Find a line that has low bias.\n\nFor simplicity, keep your slope the same, and just change the intercept.\n\n\n\n\n:::\n\n::: {.callout-note icon=false collapse=true appearance=\"minimal\"}\n## Solution\n\nIndividual results will vary a lot. Here are a few scenarios:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# positive bias\nhand.fit(x = log.body, y = log.brain, a = 3, b = 0.85, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/your turn 5 solution-1.png){width=384}\n:::\n\n```{.r .cell-code}\n# negative bias\nhand.fit(x = log.body, y = log.brain, a = 1, b = 0.85, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/your turn 5 solution-2.png){width=384}\n:::\n\n```{.r .cell-code}\n# low bias \nhand.fit(x = log.body, y = log.brain, a = 2, b = 0.85, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/your turn 5 solution-3.png){width=384}\n:::\n:::\n\n\n\n:::\n\nClearly, low bias is a desirable property of a fitted line. However, it is not the only desirable property.\n\n#### Error\n\nThe total magnitude of the residuals conveys how close the line is to the data scatter in general and thus, error. One way to measure this is by the sum of squared residuals:\n\n$$\n\\text{SSE} = \\sum_{i = 1}^n e_i^2\n$$\n\nThis quantity will be smallest whenever the line is as close as it can be to as many data points as possible at once. As a result, a good fit will generally have low error.\n\nWhile high error can arise from bias, it is also possible for a line with no bias to have high error. For example, a horizontal line through the mean RFFT will have zero bias, but still be a bad estimate:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# no bias but high error\nhand.fit(x = age, y = rfft, a = mean(rfft), b = 0, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/no bias but high error-1.png){width=384}\n:::\n:::\n\n\nThe reason the bias is zero is that the residuals balance each other out in the average. It is a mathematical fact that whenever the line passes exactly through the point defined by the sample mean of each variable -- *i.e.*, the point $(\\bar{x}, \\bar{y})$ -- the bias is exactly zero. \n\n::: callout-note\n## Your turn 6\n\nMimic the example above using the log brain and log body weights in the `mammals` dataset: find a line that has low bias but high error.\n\n\n\n\n\n:::\n\n::: {.callout-note icon=false collapse=true appearance=\"minimal\"}\n## Solution\n\nIndividual results will vary. A horizontal line through the mean log brain weight will work. Here's a more extreme example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# low bias but high error\nhand.fit(x = log.body, y = log.brain, \n         a = mean(log.brain) + mean(log.body), \n         b = -1, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/your turn 6 solution-1.png){width=384}\n:::\n:::\n\n:::\n\n\n\n#### Best unbiased line\n\nConsidering that there is an easy way to ensure the bias of the line is zero -- constrain it to pass through the center $(\\bar{x}, \\bar{y})$ -- we should concern ourselves with finding the unbiased line with lowest error. Finding the best unbiased line reduces, essentially, to finding a slope.\n\nOmitting the intercept altogether in the `hand.fit(...)` function will constrain it to pass through the center, add a point to visualize the center of the data, and print the intercept resulting from the constraint:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# omit intercept to force the line through the center point\nhand.fit(x = age, y = rfft, b = -1.2, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/constrain the line to pass through center-1.png){width=384}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nintercept     slope \n 134.6375   -1.2000 \n```\n\n\n:::\n:::\n\n\nOnce we have a slope in hand, the intercept for the fitted line can be found by direct arithmetic:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate intercept by direct arithmetic\nmean(rfft) - (-1.2)*mean(age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 134.6375\n```\n\n\n:::\n:::\n\n\nSo, finding the best unbiased line amounts to fine-tuning the slope until SSE reaches a minimum. For the `prevend` data, the best unbiased line is about this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# fine tune slope to minimize sse by hand\nhand.fit(x = age, y = rfft, b = -1.19, res = T)\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/approximate best unbiased line-1.png){width=384}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nintercept     slope \n 134.0515   -1.1900 \n```\n\n\n:::\n:::\n\n\nSo the best unbiased line results around $a = 134.05$ and $b = -1.19$.\n\nThere is an analytic solution for the slope of the best unbiased line:\n\n$$\na = r\\times \\frac{s_y}{s_x}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# analytic solution \nhand.fit(age, rfft, res = T,\n         b = cor(rfft, age)*sd(rfft)/sd(age))\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/exact best unbiased line-1.png){width=384}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n intercept      slope \n134.098052  -1.190794 \n```\n\n\n:::\n:::\n\n\nThe exact best unbiased line is therefore:\n$$\ny = 134.0981  + -1.1908x\n$$\n\n::: callout-note\n## Your turn 7\n\nFind the best unbiased line for the `mammals` data.\n\n\n\n\n:::\n\n::: {.callout-note icon=false collapse=true appearance=\"minimal\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# find exact best unbiased line for mammals data\nhand.fit(x = log.body, y = log.brain, res = T,\n         b = cor(log.body, log.brain)*sd(log.brain)/sd(log.body))\n```\n\n::: {.cell-output-display}\n![](week10-activity-linefitting_files/figure-html/your turn 7 solution-1.png){width=384}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nintercept     slope \n2.1347887 0.7516859 \n```\n\n\n:::\n:::\n\n:::\n\n### Practice problem\n\n1. [L10] The `kleiber` dataset contains observations of log-transformed average mass (kg) and log-transformed metabolic rate (kJ/day). Kleiber's law refers to the relationship by which metabolism depends on body mass.\n\n    a. Construct a scatterplot of the data, and be sure to orient the response variable and explanatory variable properly on the plot. Is there a trend, and if so, is it linear?\n    b. Compute the correlation and comment on the strength and direction of linear relationship between log-mass and log-metabolism.\n    c. Find the equation of the best unbiased line in slope-intercept form.\n    d. [extra credit] Find an expression of the form $y = a x^b$ for the relationship in (c) on the original (*i.e.*, not log-transformed) scale. What is the exponent $b$? \n\n\n\n",
    "supporting": [
      "week10-activity-linefitting_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}